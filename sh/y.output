
state 0
	$accept: .line $end 

	WORD  shift 5
	'\n'  shift 2
	.  error

	args  goto 4
	cmd  goto 3
	line  goto 1

state 1
	$accept:  line.$end 

	$end  accept
	.  error


state 2
	line:  '\n'.    (1)

	.  reduce 1 (src line 20)


state 3
	line:  cmd.'\n' 
	cmd:  cmd.'>' WORD 
	cmd:  cmd.'<' WORD 

	'\n'  shift 6
	'>'  shift 7
	'<'  shift 8
	.  error


state 4
	cmd:  args.    (3)
	args:  args.WORD 

	WORD  shift 9
	.  reduce 3 (src line 23)


state 5
	args:  WORD.    (6)

	.  reduce 6 (src line 27)


state 6
	line:  cmd '\n'.    (2)

	.  reduce 2 (src line 21)


state 7
	cmd:  cmd '>'.WORD 

	WORD  shift 10
	.  error


state 8
	cmd:  cmd '<'.WORD 

	WORD  shift 11
	.  error


state 9
	args:  args WORD.    (7)

	.  reduce 7 (src line 28)


state 10
	cmd:  cmd '>' WORD.    (4)

	.  reduce 4 (src line 24)


state 11
	cmd:  cmd '<' WORD.    (5)

	.  reduce 5 (src line 25)


7 terminals, 4 nonterminals
8 grammar rules, 12/2000 states
0 shift/reduce, 0 reduce/reduce conflicts reported
53 working sets used
memory: parser 2/30000
0 extra closures
8 shift entries, 1 exceptions
3 goto entries
0 entries saved by goto default
Optimizer space used: output 11/30000
11 table entries, 0 zero
maximum spread: 7, maximum offset: 5
